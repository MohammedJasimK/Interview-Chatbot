Topic,Difficulty,Question,Answer
python,beginner,What are Python’s main data types?,"int (integers),  float (decimal numbers),  str (strings), bool (True/False), list, tuple, set, dict (collections),  NoneType (represents “no value”)"
python,beginner,What is the difference between a list and a tuple?,"List :  Mutable (Can be changed after creation: add, remove, or modify elements).  Defined using square brackets: [1, 2, 'a'].  Slower operations due to dynamic nature.  Used for collections of items that will need to be modified (e.g., stack, queue). Tuple :  Immutable (Cannot be changed after creation).  Defined using parentheses: (1, 2, 'a').  Faster operations, generally.  Used for fixed collections of items (e.g., coordinates, database records)."
python,beginner,What are mutable and immutable data types? Give an example of each.,"Mutable:  Objects whose state (value) can be modified after they are created. Changes are ""in-place."" Example: List, Dictionary, Set, bytearray.  Immutable:  Objects whose state (value) cannot be modified after they are created. Any operation that appears to ""change"" an immutable object actually creates a new object in memory. Example: Tuple, String, Integer, Float, frozenset."
python,beginner,How do you check the data type of a variable in Python?,"Use the built-in type() function. x = 10.5 y = [1, 2, 3]  print(type(x))  # Output: <class 'float'> print(type(y))  # Output: <class 'list'>"
python,beginner,"What is a Python dictionary, and how do you access its elements?","A Python dictionary is an unordered collection of items. It stores data in key-value pairs. It is mutable, and keys must be unique and immutable (like strings, numbers, or tuples). Elements are accessed using their key inside square brackets.  data = {""name"": ""Alice"", ""age"": 30} print(data[""name""])  # Access by key. Output: Alice"
python,beginner,Explain list comprehension and provide a simple example.,"List comprehension offers a concise, Pythonic way to create lists. It is often faster and more readable than using a traditional for loop to build a list. Syntax: [expression for item in iterable if condition] Example: # Create a list of squares for numbers 1 to 5 squares = [x**2 for x in range(1, 6)] print(squares) # Output: [1, 4, 9, 16, 25]"
python,beginner,How do you open and read a file in Python?,"The recommended way is to use the with statement, which ensures the file is properly closed even if errors occur (Resource Management). with open('data.txt', 'r') as file:     content = file.read() # Reads the entire file content as a single string     # or use: file.readlines() for a list of lines     # or use: for line in file: ... to read line-by-line print(content)"
python,beginner,What are *args and **kwargs?,They are special syntaxes used in function definitions to pass a variable number of arguments to a function. *args (Non-Keyword Arguments): Collects any non-keyword (positional) arguments passed into a function as a tuple. **kwargs (Keyword Arguments): Collects any keyword arguments (those with a key/value form) passed into a function as a dictionary.
python,beginner,"What is a lambda function, and when might you use one?","A lambda function is a small anonymous function (a function without a name). It can take any number of arguments, but can only have one expression. Syntax: lambda arguments: expression Use Case: They are primarily used as a quick, throwaway function argument, often with higher-order functions like map(), filter(), sorted(), or in Pandas apply() or groupby()."
python,beginner,How do you handle errors/exceptions in Python?,"By using the try...except...finally block.  try: The code that might raise an exception is placed here. except: If an exception occurs in the try block, the code in the matching except block is executed. finally: The code here is always executed, regardless of whether an exception occurred or not (useful for cleanup, like closing a database connection).  try:     result = 10 / 0 except ZeroDivisionError:     print(""Error: Cannot divide by zero."") finally:     print(""Execution attempt finished."")"
python,beginner,What is the difference between append() and extend() for lists?,"Both are list methods that modify the list in-place. append(): Adds its argument as a single element to the end of the list. list1.append([4, 5]) results in [1, 2, 3, [4, 5]] extend(): Iterates over its argument and adds each element individually to the list. list1.extend([4, 5]) results in [1, 2, 3, 4, 5]"
python,beginner,How do you remove duplicate elements from a list?,"The most Pythonic and efficient way is to convert the list to a set (which cannot contain duplicates) and then convert it back to a list.  my_list = [1, 2, 2, 3, 1, 4] unique_list = list(set(my_list)) print(unique_list) # Output: [1, 2, 3, 4] (Order is not preserved)"
python,beginner,Explain Python's negative indexing.,"In Python sequences (like lists, tuples, and strings), negative indexing allows you to count from the end of the sequence. Index -1 refers to the last element. Index -2 refers to the second-to-last element, and so on.  data = ['A', 'B', 'C', 'D'] print(data[-1]) # Output: D"
python,beginner,How do you create a function in Python?,"Using the def keyword: def greet(name):     return f""Hello, {name}!"""
python,beginner,What is the difference between == and is?,==' : C21 checks values are equal is : checks if objects are the same in memory
python,beginner,What are global and local variables?,Local: defined inside a function; accessible only there Global: defined outside functions; accessible anywhere
python,beginner,What is the purpose of the self keyword in classes?,"self refers to the current instance of the class, allowing access to its attributes and methods."
python,beginner,What is slicing in Python?,"Extracting parts of sequences (like lists, strings):  nums = [0,1,2,3,4,5] print(nums[1:4])  # [1, 2, 3]"
python,beginner,What is the purpose of the __init__ method in classes?,"It’s a constructor — automatically called when an object is created. class Person:     def __init__(self, name):         self.name = name"
python,beginner,What is the use of the pass statement?,"The pass statement is a null operation; nothing happens when it executes. It is used as a placeholder when a statement is syntactically required, but you do not want any code to run.  Use Case: In an empty class definition, an incomplete function/method, or inside an if/else block where you intentionally want to do nothing."
python,beginner,How do you swap two variables without using a temporary variable?,"Python allows for simultaneous assignment using tuples, which makes swapping very clean: a = 10 b = 20 # Pythonic swap a, b = b, a print(f""a: {a}, b: {b}"") # Output: a: 20, b: 10"
python,beginner,What is the difference between break and continue in a loop?,break : Immediately terminates the entire loop (for or while). Execution resumes at the first statement after the loop. continue : Skips the rest of the code in the current iteration of the loop. The loop then proceeds to the next iteration.
python,beginner,Give an example of using the zip() function.,"The zip() function aggregates elements from two or more iterables. It returns an iterator of tuples, where the ith tuple contains the ith element from each of the input iterables.  names = ['Alice', 'Bob'] scores = [85, 92] for name, score in zip(names, scores):     print(f""{name}: {score}"")  # Output: # Alice: 85 # Bob: 92"
python,beginner,What is a set in Python?,"A set is an unordered collection of unique elements. Characteristics: Mutable, does not allow duplicates, and supports mathematical set operations (union, intersection, difference). Use Case: Efficiently check for membership and eliminate duplicates."
python,beginner,How do you generate a random integer between a specific range?,"Use the random module, specifically the random.randint(a, b) function. This function is inclusive, meaning it includes both the start and end values. import random # Generate a random integer between 1 and 10 (inclusive) random_number = random.randint(1, 10) print(random_number)"
python,beginner,What are Python keywords?,"Reserved words with special meaning, like if, for, class, return, import, try, etc. (Use import keyword; print(keyword.kwlist) to see all.)"
python,intermediate,Explain the difference between deep copy and shallow copy.,"Shallow copy : creates a new object, but references the same elements (nested objects are not copied). Deep copy : copies the object and all nested elements. import copy a = [[1,2],[3,4]] b = copy.copy(a)     # Shallow c = copy.deepcopy(a) # Deep"
python,intermediate,How do you handle missing values in Python?,Commonly handled using Pandas: import pandas as pd df.fillna(0)          # Replace NaN with 0 df.dropna()           # Drop rows with NaN df['col'].fillna(df['col'].mean()) # Replace with mean df['col'].fillna(df['col'].median()) # Replace with median
python,intermediate,"What is the difference between @staticmethod, @classmethod, and instance methods?",Instance method: operates on object (uses self) Class method: operates on class (uses cls) Static method: doesn’t depend on class or instance  class Example:     def instance_m(self): pass     @classmethod     def class_m(cls): pass     @staticmethod     def static_m(): pass
python,intermediate,How is memory managed in Python?,Python uses: Reference counting Garbage collection for cyclic references Private heap for object storage Memory is managed automatically by the interpreter.
python,intermediate,What is a generator in Python?,A function that yields items one at a time using yield. Saves memory (lazy evaluation).  def gen():     for i in range(3):         yield i
python,intermediate,What are iterators and how are they used?,"Iterators implement __iter__() and __next__() methods. Used to iterate through collections.  nums = [1,2,3] it = iter(nums) print(next(it))  # 1"
python,intermediate,How do you use lambda functions?,Anonymous one-line functions using lambda. square = lambda x: x**2 print(square(5))  # 25
python,intermediate,"What is the difference between map(), filter(), and reduce()?","map() : applies a function to all elements filter() : filters elements by condition reduce() : applies a function cumulatively  from functools import reduce nums = [1,2,3,4] map_res = list(map(lambda x: x*2, nums)) filter_res = list(filter(lambda x: x>2, nums)) reduce_res = reduce(lambda x,y: x+y, nums)"
python,intermediate,What is the use of the with statement?,Used to manage resources automatically (like files). It ensures cleanup (closes files). with open('file.txt') as f:     data = f.read()
python,intermediate,Explain Python decorators with an example.,"A decorator modifies the behavior of a function.  def decorator(func):     def wrapper():         print(""Before function"")         func()         print(""After function"")     return wrapper  @decorator def say_hello():     print(""Hello"")"
python,intermediate,What is the str and repr method?,"__str__: human-readable representation (print()) __repr__: unambiguous developer representation  class Person:     def __repr__(self):         return ""Person('Alice')""     def __str__(self):         return ""Alice"""
python,intermediate,"How do you use list, set, and dictionary comprehensions?",lst = [x*x for x in range(5)] st = {x for x in range(5)} dct = {x: x*x for x in range(5)}
python,intermediate,What are Python modules and packages?,Module: A single .py file with Python code. Package: A folder with multiple modules and an __init__.py file.
python,intermediate,What is virtual environment and why is it used?,An isolated Python environment that keeps dependencies separate for each project.  python -m venv env source env/bin/activate
python,intermediate,How do you handle JSON data in Python?,import json data = {'name': 'Alice'} json_str = json.dumps(data) parsed = json.loads(json_str)
python,intermediate,How can you use enumerate() in a loop?,"It adds an index while iterating. for index, value in enumerate(['a','b','c']):     print(index, value)"
python,intermediate,"What is NumPy, and what advantage do its arrays offer over standard Python lists?","NumPy (Numerical Python) is the fundamental library for scientific computing in Python. It primarily provides the ndarray (N-dimensional array) object. Advantages of NumPy Arrays over Python Lists: Speed: NumPy operations are implemented in C and are significantly faster, especially for large datasets. Vectorization: NumPy allows for vectorized operations, meaning you can apply mathematical operations to entire arrays without writing explicit loops, leading to cleaner and faster code. Memory Efficiency: NumPy arrays store elements of the same type contiguously in memory, making them much more memory efficient. Functionality: It provides a vast collection of high-level mathematical functions (linear algebra, Fourier transforms, etc.)."
python,intermediate,How does broadcasting work in NumPy? Give an example.,"Broadcasting is a mechanism that allows NumPy to perform operations on arrays of different shapes. When the dimensions of two arrays don't match, NumPy automatically ""stretches"" the smaller array across the larger array so that they have compatible shapes for element-wise operations. Rules for Broadcasting: If the arrays do not have the same number of dimensions, the shape of the smaller array is padded with ones on the left. Arrays are compatible if, for each dimension, the sizes are equal, or one of them is 1.  import numpy as np arr = np.array([1, 2, 3]) scalar_addition = arr + 5 print(scalar_addition) # Output: [6 7 8]  # The scalar '5' is broadcast across all elements of 'arr'."
python,intermediate,Explain the difference between .loc and .iloc in Pandas DataFrames.,"These are the primary methods for indexing and selecting data in a Pandas DataFrame: .loc : Label-based (or Boolean array) Uses the actual row and column names (labels/index). .iloc : Integer-location based Uses the integer positions (0-based) of the rows and columns.  Example: If you have a DataFrame df with column name 'Age' and row index 5: df.loc[5, 'Age'] accesses the cell by its label/name. df.iloc[5, 1] accesses the cell by its 6th row and 2nd column position."
python,intermediate,How do you handle missing values (NaN) in a Pandas DataFrame?,"Handling missing data is a critical step in data cleaning. The two main strategies using Pandas are: Dropping Missing Values (.dropna()): To remove rows with any NaN: df.dropna(how='any') To remove columns with any NaN: df.dropna(axis=1) Imputing Missing Values (.fillna()): Fill with a specific value (e.g., zero): df['column'].fillna(0) Fill with a statistical measure (e.g., mean/median): df['column'].fillna(df['column'].mean()) Fill using surrounding values: df.fillna(method='ffill') (forward fill) or df.fillna(method='bfill') (backward fill)."
python,intermediate,"What is the difference between merge(), join(), and concat() in Pandas?","pd.concat(): Used to stack DataFrames along an axis (rows or columns). It does not care about the indices or columns aligning; it simply glues them together. Default: axis=0 (vertically, stacking rows). pd.merge(): Used for database-style joining based on common column(s) (keys) or indices. It offers different join types (inner, outer, left, right). This is the most versatile way to combine data based on a relationship. df.join(): Used to combine DataFrames based on their index. It's a convenient, index-focused version of merge() (though you can specify a column to join on)."
python,intermediate,What is the purpose of the apply() function in a Pandas Series or DataFrame?,The apply() function is used to apply a function along an axis of a DataFrame or to every element of a Series. It is extremely useful for running custom logic on your data. When used on a Series: The function is applied to each value. When used on a DataFrame: The function is applied to each row (axis=1) or each column (axis=0).  Example: Applying a lambda function to create a new column based on an existing one. df['Status'] = df['Age'].apply(lambda x: 'Adult' if x >= 18 else 'Minor')
python,intermediate,"How does Python manage memory, and what is Garbage Collection?","Python's memory management has two main components: Private Heap Space: All Python objects and data structures are stored in a private heap. The programmer does not directly access this, only the Python interpreter can. Garbage Collection: Python automatically reclaims memory occupied by objects that are no longer being used (i.e., no references point to them). Reference Counting: The primary mechanism. Every object has a counter tracking the number of references to it. When the counter drops to zero, the object's memory is immediately freed. Generational Cyclic Garbage Collector: Handles reference cycles (where two or more objects reference each other but are no longer accessible by the rest of the program), which reference counting cannot detect."
python,intermediate,What are decorators in Python? How can they be used in a data science context?,"A decorator is a design pattern that allows a user to modify or extend a function or class without permanently altering its source code. It is essentially a function that takes another function as an argument, adds some functionality, and returns the modified function. Syntax: Using the @ symbol before a function definition. Data Science Use Cases: Logging: Automatically log the input parameters and output results of a machine learning function. Timing/Profiling: Measure the execution time of expensive functions (e.g., model training or large data transformations). Caching: Memoizing the results of pure functions to avoid re-computation (common in feature engineering)."
python,intermediate,"How do you group data in Pandas, and what is the significance of the groupby() method?","The groupby() method is the core of split-apply-combine strategy in Pandas. It's used to group a DataFrame using a mapping or function, and then apply a function (like an aggregation or transformation) to the resulting groups.  Steps (Split-Apply-Combine):  Split: The DataFrame is split into groups based on a key (e.g., a categorical column). Apply: A function (e.g., sum(), mean(), count(), transform(), apply()) is applied to each group independently. Combine: The results of the applied function are combined into a new DataFrame or Series. Example: Calculate the average age for each city. df.groupby('City')['Age'].mean()"
python,intermediate,Explain the concept of vectorization in Python for data science.,"Vectorization is the process of performing operations on entire arrays (vectors) at once, rather than on individual elements in a Python loop. How it works: Libraries like NumPy and Pandas leverage highly optimized, low-level C code to execute these array operations. Significance: It drastically improves performance and reduces computation time because it minimizes the overhead of Python's interpreter loop. Example: Instead of: [x*2 for x in my_list], you use the vectorized operation: numpy_array * 2."
python,intermediate,"What is the GIL (Global Interpreter Lock), and how does it affect multi-threading?","GIL: A mutex (lock) that protects access to Python objects, preventing multiple native threads from executing Python bytecodes simultaneously. In essence, it ensures that only one thread can be running Python code at any given moment. Effect on Multi-Threading (CPU-bound tasks): For tasks that are heavily CPU-bound (e.g., intensive numerical computation), the GIL effectively makes multi-threading useless for parallelism, as threads are forced to wait for the lock. Workaround: For CPU-bound tasks, the multiprocessing module is used (since each process gets its own Python interpreter and its own GIL). Data Science libraries (NumPy, Pandas) often release the GIL during their low-level C calculations, allowing them to utilize multiple cores."
python,intermediate,How do you save and load a trained machine learning model in Python?,"This process is called serialization and deserialization. The most common Python modules for this are: pickle: Python's built-in module for serializing and deserializing Python object structures. joblib: A library built on pickle that is often more efficient for large NumPy arrays (common in machine learning models) as it can handle large data more effectively. import joblib from sklearn.linear_model import LogisticRegression # Assuming 'model' is a trained object # Saving the model joblib.dump(model, 'logistic_model.pkl') # Loading the model loaded_model = joblib.load('logistic_model.pkl')"
python,intermediate,Describe the difference between classes and objects.,"This is a fundamental OOP question: Class: A blueprint or a template for creating objects. It defines a set of attributes (variables) and methods (functions) that the created object will possess. A class is a logical construct that does not occupy any memory. Object (Instance): A concrete instance of a class. It is a real entity created from the blueprint. An object occupies memory and has a specific state defined by the values of its attributes. Analogy: A Class is like the design for a house, and an Object is an actual, built house based on that design."
python,intermediate,How do you calculate the variance and standard deviation of a NumPy array?,"NumPy provides highly optimized methods directly on the ndarray object:Variance: Use the .var() method.Standard Deviation: Use the .std() method.Note: By default, NumPy uses the N (population) denominator for the calculations. You can specify the Degrees of Freedom (ddof) parameter for N-1 (sample) denominator, which is common in statistics.  arr = np.array([1, 2, 3, 4, 5]) print(arr.var())    # Population variance print(arr.std())    # Population standard deviation"
python,intermediate,How would you scale numerical features in a Pandas DataFrame?,"Scaling is typically done using Scikit-learn (sklearn) preprocessors, which are designed to be used within a Machine Learning pipeline: Standardization (StandardScaler): Rescales data to have a mean of 0 and a standard deviation of 1. Min-Max Scaling (MinMaxScaler): Rescales data to a fixed range, usually 0 to 1. Implementation (StandardScaler Example): from sklearn.preprocessing import StandardScaler import pandas as pd # 1. Initialize the Scaler scaler = StandardScaler() # 2. Fit and Transform the column(s) df['Scaled_Feature'] = scaler.fit_transform(df[['Original_Feature']])"
python,advanced,"What is the difference between map(), apply(), and applymap() in Pandas?","These are all used to apply functions, but at different granularities: Function,Granularity,Input/Output,Primary Use Case Series.map(),Element-wise on a Series,""Accepts a dictionary, Series, or function."",""Mapping values from one set to another (e.g., replacing categorical codes with labels)."" DataFrame.apply(),Along an axis (row or column),Accepts a function.,Applying custom function to each row (axis=1) or column (axis=0). Used for feature engineering. DataFrame.applymap(),Element-wise on a DataFrame,Accepts a function.,Applying a function to every single element in the entire DataFrame. (Now largely superseded by df.map and df.apply(lambda x: x.map()))"
python,advanced,How would you handle a dataset that is too large to fit into memory using Python?,"The general strategy is to employ lazy loading and parallel/distributed computing: Pandas Chunking: Read the data in chunks using pd.read_csv(..., chunksize=N). Process each chunk (e.g., aggregate, clean) and store the results before combining them. Dask DataFrames: Use the Dask library, which mimics Pandas syntax but parallelizes operations across a cluster or multiple cores, keeping only necessary chunks in memory. Database/Spark: Store the data in a database (like SQL) or use a distributed computing framework like Apache Spark (via PySpark), which is designed to handle petabytes of data by distributing it across many machines. Optimized Formats: Use memory-efficient storage formats like Parquet or HDF5, which allow for column-wise reading and compression."
python,advanced,Describe how the sklearn.pipeline module helps in machine learning workflows.,"The Pipeline class in Scikit-learn chains together multiple processing steps (transformers and an estimator) into a single object.  Benefits:  Convenience: Simplifies the workflow by applying all transformations (imputation, scaling, feature engineering) and the final model training in one fit() and predict() call.  Safety/Correctness: Prevents data leakage. When performing cross-validation, the pipeline ensures that transformations (like scaling or imputation) are fit() only on the training folds and then transform()ed to both training and validation folds. Reproducibility: The entire sequence of steps is saved/loaded as a single, reproducible object when serializing the model."
python,advanced,"How do you perform a time-series rolling calculation (e.g., a 7-day moving average) in Pandas?","Rolling calculations are a core time-series operation in data science. It is done using the .rolling() method on a Pandas Series or DataFrame. Define the Window: Specify the size of the rolling window (e.g., '7D' for 7 days or 7 for 7 periods). Apply Calculation: Apply an aggregation function (e.g., .mean(), .sum(), .std()). df['Close_Price_7D_MA'] = df['Close_Price'].rolling(window='7D').mean()  # '7D' is used for a time-based index.  # Use 'window=7' for a period-based index."
python,advanced,Explain the concept of Duck Typing in Python and its relevance to Data Science libraries.,"Duck Typing: A concept in dynamic languages where the type of an object is less important than the methods it supports. If an object walks like a duck and quacks like a duck, it is a duck. Example: Python doesn't care if an object is a list or a custom iterable class, as long as it has the required __iter__ method to be iterated over in a for loop. Relevance to Data Science: Interoperability: This is why NumPy arrays, Pandas DataFrames, and Scikit-learn estimators can often be seamlessly passed between different functions and libraries, as they all adhere to specific ""protocols"" (e.g., a Scikit-learn estimator must have fit() and predict() methods)."
python,advanced,"What are f-strings, and why are they considered better than other formatting methods?","f-strings (formatted string literals, introduced in Python 3.6) allow you to embed Python expressions inside string literals using curly braces {}. They are prefixed with an 'f'. Example: f""The result is {value:.2f}"" Why they are better: Readability: They are much easier to read and write than older methods (.format() or % formatting). Performance: They are generally the fastest way to format strings because the heavy lifting is done at compilation time. Conciseness: Expressions (e.g., function calls, arithmetic) can be directly included inside the braces."
python,advanced,How would you use a collections.Counter for feature engineering?,"collections.Counter is a subclass of dict that is specifically designed for counting hashable objects. Feature Engineering Use Case (Frequency Encoding): Calculate Frequencies: Use Counter to quickly get the frequency of each category in a nominal feature column. Create a New Feature: Map the frequency count back to the original DataFrame as a new numerical feature. This works well for high-cardinality categorical features. from collections import Counter import pandas as pd  data = ['A', 'B', 'A', 'C', 'B', 'A'] counts = Counter(data) # Output: {'A': 3, 'B': 2, 'C': 1} # Map frequency back to the original list/Series frequency_feature = [counts[item] for item in data] # Output: [3, 2, 3, 1, 2, 3]"
python,advanced,"How do you check if a DataFrame has a ""SettingWithCopyWarning"", and how do you resolve it?","What it is: The warning occurs when Pandas thinks you might be modifying a copy or a view of a slice of the original DataFrame, rather than the original DataFrame itself. The modification might not stick to the original DataFrame, leading to silent data errors. Checking: The warning appears automatically during the operation. Resolution: Always use the .loc accessor to ensure you are modifying the intended data.  # CODE THAT CAUSES WARNING (Chained assignment) # df[df['score'] > 90]['grade'] = 'A'   # CORRECT CODE (Using .loc for explicit assignment) df.loc[df['score'] > 90, 'grade'] = 'A'"
python,advanced,"In Scikit-learn, what is the purpose of the fit_transform method versus just fit or transform?","These are used by Scikit-learn's transformers (e.g., StandardScaler, OneHotEncoder).fit(X): Calculates the necessary parameters/statistics from the data X.Example: For StandardScaler, it calculates the mean and standard deviation of X.transform(X): Applies the transformation to the data X using the parameters calculated in the fit step.fit_transform(X): A convenience method that first calls fit(X) and then immediately calls transform(X). It is used only on the training data.Key Distinction: To prevent data leakage, you use fit_transform() on the training data to calculate statistics and apply the transformation. You only use transform() (and never fit()) on the test/validation data to apply the same statistics derived from the training set."
python,advanced,How does scipy.stats support hypothesis testing in Python?,"The scipy.stats module provides a comprehensive suite of statistical functions, including tools for hypothesis testing.Functionality: It includes functions for standard tests like $t$-tests (ttest_ind, ttest_rel), ANOVA (f_oneway), chi-squared tests (chisquare), and non-parametric tests (e.g., mannwhitneyu).Usage: You provide the sample data, and the functions return the test statistic and the p-value. The p-value allows the data scientist to determine whether to reject the null hypothesis."
python,advanced,What is multithreading and multiprocessing in Python?,Multithreading: multiple threads share the same memory (good for I/O-bound tasks). Multiprocessing: multiple processes with separate memory (good for CPU-bound tasks).  from threading import Thread from multiprocessing import Process
python,advanced,What are asynchronous functions (async/await) used for?,"Used for concurrent (non-blocking) code execution, mainly in I/O-bound tasks. import asyncio async def fetch_data():     await asyncio.sleep(1)     return ""done"""
SQL,beginner,What does SQL stand for?,Structured Query Language.
SQL,beginner,What is a database?,A database is an organized collection of structured data stored electronically.
SQL,beginner,What is a table in SQL?,A table is a collection of related data entries organized in rows and columns.
SQL,beginner,What is a primary key?,A column or set of columns that uniquely identifies each record in a table.
SQL,beginner,What is a foreign key?,A key used to link two tables together based on a related column.
SQL,beginner,What is the purpose of the SELECT statement?,It retrieves data from a database.
SQL,beginner,What is the WHERE clause used for?,It filters records based on a specified condition.
SQL,beginner,What does the DISTINCT keyword do?,It returns unique values by removing duplicates.
SQL,beginner,What is the ORDER BY clause used for?,It sorts the result set in ascending or descending order.
SQL,beginner,What is the LIMIT clause used for?,It restricts the number of records returned.
SQL,beginner,What is an SQL query?,A command written to perform a specific operation on a database.
SQL,beginner,What does the INSERT statement do?,It adds new rows to a table.
SQL,beginner,What does the UPDATE statement do?,It modifies existing records in a table.
SQL,beginner,What does the DELETE statement do?,It removes records from a table.
SQL,beginner,What is the default sorting order in SQL?,Ascending order (ASC).
SQL,beginner,What is a NULL value?,A missing or undefined value in a table column.
SQL,beginner,How do you rename a column in SQL?,Using the AS keyword in a SELECT statement.
SQL,beginner,What is a constraint in SQL?,A rule enforced on data columns to maintain data integrity.
SQL,beginner,What is the difference between CHAR and VARCHAR?,"CHAR is fixed-length, VARCHAR is variable-length."
SQL,beginner,How do you retrieve all columns from a table?,Use SELECT * FROM table_name;
SQL,intermediate,What is a JOIN in SQL?,A JOIN combines rows from two or more tables based on related columns.
SQL,intermediate,What is an INNER JOIN?,It returns only rows with matching values in both tables.
SQL,intermediate,What is a LEFT JOIN?,It returns all rows from the left table and matching rows from the right table.
SQL,intermediate,What is a RIGHT JOIN?,It returns all rows from the right table and matching rows from the left table.
SQL,intermediate,What is a FULL OUTER JOIN?,It returns all rows when there is a match in one of the tables.
SQL,intermediate,What is a SELF JOIN?,A join where a table is joined with itself.
SQL,intermediate,What is a UNION in SQL?,It combines the results of two SELECT statements and removes duplicates.
SQL,intermediate,What is UNION ALL?,It combines results from multiple SELECTs without removing duplicates.
SQL,intermediate,What is a subquery?,A query nested inside another query.
SQL,intermediate,What is a view?,A virtual table based on the result of a SQL query.
SQL,intermediate,What is a stored procedure?,A saved collection of SQL statements that can be executed as a unit.
SQL,intermediate,What is an index in SQL?,A database object that improves query performance by speeding up data retrieval.
SQL,intermediate,What is normalization?,The process of organizing data to reduce redundancy and improve integrity.
SQL,intermediate,What is denormalization?,Adding redundancy to improve query performance.
SQL,intermediate,What is the GROUP BY clause used for?,It groups rows sharing a property for aggregation functions.
SQL,intermediate,What are aggregate functions?,"Functions like COUNT, SUM, AVG, MIN, MAX that operate on groups of values."
SQL,intermediate,What is the HAVING clause used for?,It filters grouped data after aggregation.
SQL,intermediate,What is a trigger in SQL?,A stored procedure that runs automatically when an event occurs in a table.
SQL,intermediate,What is a transaction?,A sequence of operations performed as a single logical unit of work.
SQL,intermediate,What are ACID properties?,"Atomicity, Consistency, Isolation, Durability — ensure reliable transactions."
SQL,advanced,What is a CTE (Common Table Expression)?,"A temporary result set defined within the execution scope of a SELECT, INSERT, UPDATE, or DELETE statement."
SQL,advanced,What is a window function?,A function that performs calculations across a set of rows related to the current row.
SQL,advanced,What is partitioning in SQL?,"Dividing a database object like a table into smaller, manageable pieces."
SQL,advanced,What is sharding?,Distributing data across multiple servers to improve performance and scalability.
SQL,advanced,Explain indexing strategies.,Use indexing on frequently searched columns and avoid over-indexing to prevent performance loss on writes.
SQL,advanced,What is query optimization?,"The process of improving query performance using indexes, statistics, and query rewriting."
SQL,advanced,What is the difference between clustered and non-clustered index?,A clustered index sorts and stores rows physically; non-clustered does not.
SQL,advanced,What is a materialized view?,A database object that stores the results of a query physically for faster access.
SQL,advanced,Explain deadlock in SQL.,A situation where two transactions block each other by holding resources the other needs.
SQL,advanced,What is replication in SQL?,Copying and maintaining database objects in multiple databases for consistency and availability.
Machine Learning,beginner,What is Machine Learning?,A field of AI that enables systems to learn and improve from experience without explicit programming.
Machine Learning,beginner,What are the main types of Machine Learning?,"Supervised, Unsupervised, and Reinforcement Learning."
Machine Learning,beginner,What is supervised learning?,A learning method using labeled data to train a model to make predictions.
Machine Learning,beginner,What is unsupervised learning?,A learning method using unlabeled data to find patterns or groupings.
Machine Learning,beginner,What is reinforcement learning?,A method where an agent learns by interacting with an environment and receiving rewards or penalties.
Machine Learning,beginner,What is a dataset?,A collection of data used for training and testing a machine learning model.
Machine Learning,beginner,What is a feature?,An individual measurable property or characteristic of the data.
Machine Learning,beginner,What is a label in ML?,The target variable or output we aim to predict in supervised learning.
Machine Learning,beginner,What is overfitting?,When a model performs well on training data but poorly on unseen data.
Machine Learning,beginner,What is underfitting?,When a model is too simple to capture the underlying pattern in the data.
Machine Learning,beginner,What is training data?,The data used to train a machine learning model.
Machine Learning,beginner,What is testing data?,The data used to evaluate the performance of a trained model.
Machine Learning,beginner,What is cross-validation?,A technique to assess model performance by splitting data into multiple training and testing sets.
Machine Learning,beginner,What is a confusion matrix?,A table used to evaluate classification model performance by comparing predicted and actual labels.
Machine Learning,beginner,What is accuracy?,The ratio of correctly predicted observations to the total observations.
Machine Learning,beginner,What is precision?,The ratio of true positives to the total predicted positives.
Machine Learning,beginner,What is recall?,The ratio of true positives to the total actual positives.
Machine Learning,beginner,What is F1-score?,The harmonic mean of precision and recall.
Machine Learning,beginner,What is feature scaling?,A technique to normalize or standardize data features to improve model performance.
Machine Learning,beginner,What is a decision tree?,A model that splits data based on feature values to make predictions in a tree-like structure.
Machine Learning,intermediate,What is gradient descent?,An optimization algorithm used to minimize the loss function by adjusting model parameters.
Machine Learning,intermediate,What is the learning rate?,A parameter that controls the size of steps in gradient descent.
Machine Learning,intermediate,What is regularization?,A technique to prevent overfitting by adding a penalty to the loss function.
Machine Learning,intermediate,What is L1 regularization?,"Also known as Lasso, it adds the absolute value of coefficients as a penalty term."
Machine Learning,intermediate,What is L2 regularization?,"Also known as Ridge, it adds the squared value of coefficients as a penalty term."
Machine Learning,intermediate,What is logistic regression?,A classification algorithm that models the probability of a binary outcome.
Machine Learning,intermediate,What is a confusion matrix used for?,To measure model performance by comparing predicted and true labels.
Machine Learning,intermediate,What is a support vector machine?,A model that finds the optimal hyperplane that best separates different classes.
Machine Learning,intermediate,What is k-means clustering?,An unsupervised algorithm that groups data into k clusters based on similarity.
Machine Learning,intermediate,What is PCA (Principal Component Analysis)?,A dimensionality reduction technique that transforms data into uncorrelated components.
Machine Learning,intermediate,What is bias in ML?,Error introduced by simplifying assumptions in the model.
Machine Learning,intermediate,What is variance in ML?,Error introduced by model sensitivity to small fluctuations in training data.
Machine Learning,intermediate,What is the bias-variance tradeoff?,Balancing model simplicity and complexity to minimize total error.
Machine Learning,intermediate,What is feature selection?,Choosing the most important features for training a model.
Machine Learning,intermediate,What is one-hot encoding?,A method to represent categorical data as binary vectors.
Machine Learning,intermediate,What is normalization?,"Scaling input values to a range like [0,1] to ensure equal feature contribution."
Machine Learning,intermediate,What is standardization?,Rescaling data to have mean 0 and standard deviation 1.
Machine Learning,intermediate,What is cross-entropy loss?,A loss function commonly used for classification tasks.
Machine Learning,intermediate,What is k-nearest neighbors (KNN)?,A simple algorithm that classifies samples based on the majority class among k nearest data points.
Machine Learning,intermediate,What is a random forest?,An ensemble of decision trees that improves accuracy and reduces overfitting.
Machine Learning,advanced,What is a neural network?,"A computational model inspired by the human brain, consisting of layers of interconnected nodes."
Machine Learning,advanced,What is deep learning?,A subset of ML using neural networks with many layers to model complex data patterns.
Machine Learning,advanced,What is backpropagation?,An algorithm for training neural networks by updating weights based on error gradients.
Machine Learning,advanced,What is a convolutional neural network (CNN)?,A deep learning model used primarily for image processing and pattern recognition.
Machine Learning,advanced,What is a recurrent neural network (RNN)?,A neural network designed to handle sequential data by retaining information across time steps.
Machine Learning,advanced,What is dropout in neural networks?,A regularization technique that randomly ignores some neurons during training to prevent overfitting.
Machine Learning,advanced,What is transfer learning?,"Using a pre-trained model on a new, related task to reduce training time and improve performance."
Machine Learning,advanced,What is gradient vanishing?,"A problem in deep networks where gradients become too small, preventing effective learning."
Machine Learning,advanced,What is reinforcement learning used for?,"Applications like game AI, robotics, and decision-making where agents learn via rewards."
Machine Learning,advanced,What is explainable AI?,Techniques that make model predictions interpretable and transparent to humans.
NLP,beginner,What is NLP?,"Natural Language Processing is a field of AI that enables computers to understand, interpret, and generate human language."
NLP,beginner,What are the main tasks in NLP?,"Text classification, sentiment analysis, machine translation, named entity recognition, and text summarization."
NLP,beginner,What is tokenization?,The process of splitting text into smaller units like words or sentences.
NLP,beginner,What is stemming?,Reducing words to their root form by removing suffixes.
NLP,beginner,What is lemmatization?,Reducing words to their base or dictionary form using linguistic rules.
NLP,beginner,What is a corpus?,A large collection of text used for training NLP models.
NLP,beginner,What is stop word removal?,"Eliminating common words like 'the', 'is', and 'and' that carry little meaning."
NLP,beginner,What is bag-of-words model?,A representation of text as an unordered collection of word frequencies.
NLP,beginner,What is TF-IDF?,"Term Frequency-Inverse Document Frequency, a measure of how important a word is to a document in a corpus."
NLP,beginner,What is word embedding?,A vector representation of words capturing their semantic meaning.
NLP,beginner,What is a sentence?,A group of words expressing a complete thought.
NLP,beginner,What is part-of-speech tagging?,"Labeling words in a sentence with their grammatical roles like noun, verb, adjective, etc."
NLP,beginner,What is named entity recognition?,"Identifying proper names like people, organizations, or locations in text."
NLP,beginner,What is sentiment analysis?,Determining the emotional tone or opinion expressed in text.
NLP,beginner,What is text classification?,Assigning predefined categories to text documents.
NLP,beginner,What is language modeling?,Predicting the next word in a sequence based on previous words.
NLP,beginner,What is N-gram?,A contiguous sequence of N items (usually words) from a text sample.
NLP,beginner,What is stopword filtering?,"Removing common, insignificant words from text to reduce noise."
NLP,beginner,What is the difference between stemming and lemmatization?,Stemming cuts off word endings; lemmatization uses linguistic rules to find the base word.
NLP,beginner,What is token?,"A basic unit of text, such as a word or punctuation mark."
NLP,intermediate,What is Word2Vec?,A model that learns vector representations of words based on their context.
NLP,intermediate,What is GloVe?,"Global Vectors for Word Representation, a model based on word co-occurrence statistics."
NLP,intermediate,What is fastText?,An extension of Word2Vec that represents words as combinations of character n-grams.
NLP,intermediate,What is cosine similarity?,A measure of similarity between two vectors based on the cosine of the angle between them.
NLP,intermediate,What is bag-of-n-grams?,A representation considering sequences of words rather than single words.
NLP,intermediate,What is text normalization?,"Transforming text into a consistent format, such as lowercasing and removing punctuation."
NLP,intermediate,What is word sense disambiguation?,Determining which meaning of a word is used in context.
NLP,intermediate,What is a language model?,A model that predicts the probability of a sequence of words.
NLP,intermediate,What is machine translation?,Automatically translating text from one language to another.
NLP,intermediate,What is attention mechanism?,A technique allowing models to focus on relevant parts of the input sequence.
NLP,intermediate,What is sequence-to-sequence learning?,"Mapping an input sequence to an output sequence, such as in translation."
NLP,intermediate,What is encoder-decoder architecture?,A neural network design for sequence transduction tasks like translation or summarization.
NLP,intermediate,What is an embedding layer?,A neural network layer that converts categorical data into dense vectors.
NLP,intermediate,What is perplexity in NLP?,A measure of how well a language model predicts a sample.
NLP,intermediate,What is BLEU score?,A metric for evaluating the quality of machine-translated text.
NLP,intermediate,What is ROUGE score?,A metric for evaluating text summarization by comparing overlaps with reference summaries.
NLP,intermediate,What is tokenization in transformers?,Breaking text into subword units compatible with pre-trained models.
NLP,intermediate,What is subword tokenization?,Splitting words into smaller pieces to handle rare or unknown words.
NLP,intermediate,What is named entity recognition used for?,"Extracting proper nouns like person names, places, or organizations from text."
NLP,intermediate,What is stopword removal important for?,It helps reduce noise and improve model performance.
NLP,advanced,What is BERT?,"Bidirectional Encoder Representations from Transformers, a model pre-trained on large corpora for various NLP tasks."
NLP,advanced,What is GPT?,"Generative Pre-trained Transformer, a model that generates human-like text using transformer architecture."
NLP,advanced,What is a transformer in NLP?,A neural network architecture using self-attention to process sequences efficiently.
NLP,advanced,What is self-attention?,A mechanism that allows models to weigh the importance of each token relative to others in a sequence.
NLP,advanced,What is fine-tuning in NLP?,Adapting a pre-trained model to a specific task by training on task-specific data.
NLP,advanced,What is zero-shot learning in NLP?,Performing tasks without explicit training examples for that task.
NLP,advanced,What is a large language model?,A model with billions of parameters trained on vast text data to understand and generate language.
NLP,advanced,What is prompt engineering?,Crafting input prompts to guide the behavior and output of large language models.
NLP,advanced,What is semantic search?,Retrieving documents based on meaning rather than keyword matching.
NLP,advanced,What is transfer learning in NLP?,Using knowledge from pre-trained models for new NLP tasks to save time and resources.
Generative AI,beginner,What is Generative AI?,"A branch of AI that creates new content such as text, images, music, or code using learned patterns from data."
Generative AI,beginner,What are some popular applications of Generative AI?,"Text generation, image synthesis, video creation, music composition, and code generation."
Generative AI,beginner,What is a generative model?,A model that can produce new data instances similar to its training data.
Generative AI,beginner,What is the difference between generative and discriminative models?,Generative models create data; discriminative models classify or predict outcomes.
Generative AI,beginner,What are some common generative AI models?,"GANs, VAEs, and Transformer-based models like GPT and Stable Diffusion."
Generative AI,beginner,What is a dataset in Generative AI?,A collection of data used to train models to learn patterns for generating new content.
Generative AI,beginner,What is prompt engineering?,The process of crafting effective input prompts to guide a model's output.
Generative AI,beginner,What is GPT?,"Generative Pre-trained Transformer, a model that generates human-like text."
Generative AI,beginner,What is Stable Diffusion?,An AI model that generates images from text prompts using diffusion processes.
Generative AI,beginner,What is DALL·E?,An image generation model by OpenAI that creates pictures from textual descriptions.
Generative AI,beginner,What is fine-tuning?,"Training a pre-trained model on a smaller, specific dataset to specialize it for a particular task."
Generative AI,beginner,What is text-to-image generation?,The process of generating images from descriptive text using AI models.
Generative AI,beginner,What is a latent space?,A compressed representation of data used by generative models to produce new samples.
Generative AI,beginner,What is temperature in text generation?,A parameter controlling randomness in model output; higher values produce more creative results.
Generative AI,beginner,What is a token in Generative AI?,"A unit of text (word, subword, or symbol) used by language models to process input."
Generative AI,beginner,What is zero-shot generation?,Generating outputs for tasks the model was not explicitly trained on.
Generative AI,beginner,What is multimodal AI?,"AI that can process and generate multiple types of data, such as text, images, and audio."
Generative AI,beginner,What is model hallucination?,When a model generates incorrect or fabricated information.
Generative AI,beginner,What is the role of training data in Generative AI?,It helps models learn patterns and structures to generate realistic outputs.
Generative AI,beginner,What is creative AI?,"AI systems capable of producing new and imaginative content like art, stories, and music."
Generative AI,intermediate,What is a GAN?,"A Generative Adversarial Network where two neural networks, a generator and a discriminator, compete to create realistic data."
Generative AI,intermediate,What is a VAE?,A Variational Autoencoder that learns to encode data into a latent space and decode it back to generate new samples.
Generative AI,intermediate,What is the difference between GAN and VAE?,"GANs generate sharper samples, while VAEs focus on learning smooth latent representations."
Generative AI,intermediate,What is diffusion in generative AI?,A process that gradually adds noise to data and then learns to reverse it to generate new content.
Generative AI,intermediate,What is the transformer architecture?,"A neural network structure based on self-attention, widely used in generative AI models."
Generative AI,intermediate,What is self-attention?,A mechanism that helps models weigh relationships between different parts of an input sequence.
Generative AI,intermediate,What is a decoder in a transformer?,A component that generates output sequences based on encoded input and attention mechanisms.
Generative AI,intermediate,What is reinforcement learning from human feedback (RLHF)?,A technique that uses human feedback to align AI outputs with user preferences.
Generative AI,intermediate,What is a language model?,A model that predicts or generates text based on patterns learned from language data.
Generative AI,intermediate,What is a diffusion model?,A generative model that starts with random noise and iteratively refines it into data samples.
Generative AI,intermediate,What is image-to-image translation?,"Transforming one image into another using generative models, such as changing styles or objects."
Generative AI,intermediate,What is inpainting?,Filling in missing or masked parts of an image using a generative model.
Generative AI,intermediate,What is style transfer?,Applying the artistic style of one image to another while preserving its content.
Generative AI,intermediate,What is data augmentation?,Creating synthetic data to improve model training and diversity.
Generative AI,intermediate,What is latent diffusion?,A generative process operating in a compressed latent space instead of pixel space for efficiency.
Generative AI,intermediate,What is conditioning in generative models?,"Guiding generation using additional input such as text, labels, or images."
Generative AI,intermediate,What is text-to-video generation?,Using generative models to create video content from text prompts.
Generative AI,intermediate,What is fine-tuning large language models?,Customizing pre-trained LLMs for specific domains or tasks using smaller datasets.
Generative AI,intermediate,What is prompt tuning?,Optimizing input prompts automatically to improve model performance on specific tasks.
Generative AI,intermediate,What is controllable generation?,Techniques allowing users to guide AI outputs toward specific attributes or styles.
Generative AI,advanced,What is a diffusion transformer?,A hybrid model combining diffusion processes with transformer architectures for high-quality generation.
Generative AI,advanced,What are foundation models?,Large pre-trained models that serve as the base for many downstream tasks through fine-tuning or prompting.
Generative AI,advanced,What is model alignment?,"Ensuring AI outputs are consistent with human values, ethics, and intentions."
Generative AI,advanced,What are hallucination mitigation techniques?,Methods such as retrieval augmentation and fact-checking to reduce false outputs.
Generative AI,advanced,What is retrieval-augmented generation (RAG)?,Combining a retriever with a generator to ground responses in factual data sources.
Generative AI,advanced,What is multimodal fusion?,"Integrating multiple data types like text, image, and audio into one model for richer understanding."
Generative AI,advanced,What is a large language model (LLM)?,A transformer-based model trained on massive text data to understand and generate human-like language.
Generative AI,advanced,What are ethical concerns in Generative AI?,"Bias, misinformation, copyright issues, and misuse of generated content."
Generative AI,advanced,What is model distillation?,"Compressing large models into smaller, faster ones while preserving performance."
Generative AI,advanced,What is few-shot learning?,Adapting a model to new tasks using only a few examples.
